// src/styles/_messages.scss
// Styling for message groups, bubbles, avatars, actions, timestamps etc.

// Assumes these variables are defined elsewhere (e.g., in :root or _variables.scss)
// :root {
//   --chat-spacing-unit: 5px; // Example base spacing
//   --chat-avatar-size: 32px; // Example default avatar size
//   --chat-message-max-width: 700px; // Example fixed max width for messages
//   --chat-column-max-width: 1000px; // Example reduced max width for the whole chat column
// }

// Center the entire chat column
.ollama-chat-container {
  max-width: var(--chat-column-max-width); // Apply overall max width
  width: 100%;      // Allow shrinking
  margin-left: auto;
  margin-right: auto;
  // Keep existing padding, flex properties for vertical layout if needed
  // padding: calc(var(--chat-spacing-unit) * 4);
  // box-sizing: border-box;
}

.message-group {
  display: flex;
  width: 100%; // Takes width of the centered container now
  margin-bottom: calc(var(--chat-spacing-unit) * 10) !important; // Vertical space between groups
  position: relative; // Context for potential absolute elements if ever needed
  box-sizing: border-box;

  // Group alignment dictates order and avatar margin side
  &.user-message-group {
    // justify-content: flex-end; // No longer needed if wrapper handles margin
    .message-group-avatar { order: 2; } // Avatar on the right
    .message-wrapper {
       order: 1; // Messages on the left
       align-items: flex-end; // Align bubbles & actions to the right inside wrapper
       margin-right: calc(var(--chat-avatar-size) + var(--chat-spacing-unit) * 2); // Space for avatar
       margin-left: auto; // Push wrapper away from left edge
    }
  }

  &.ollama-message-group {
    // justify-content: flex-start; // No longer needed
    .message-group-avatar { order: 1; } // Avatar on the left
     .message-wrapper {
       order: 2; // Messages on the right
       align-items: flex-start; // Align bubbles & actions to the left inside wrapper
       margin-left: calc(var(--chat-avatar-size) + var(--chat-spacing-unit) * 2); // Space for avatar
       margin-right: auto; // Push wrapper away from right edge
    }
  }
}

// Wrapper for one or more message bubbles + their action buttons below it
.message-wrapper {
   display: flex;
   flex-direction: column;
   max-width: var(--chat-message-max-width); // Apply the fixed PX max-width here
   gap: calc(var(--chat-spacing-unit) * 0.75); // Vertical gap between message bubble and action buttons below it
   // align-items (flex-start/flex-end) are set by the parent group rule


}


// Avatar Styles
.message-group-avatar {
  align-self: flex-end; // Stick to the bottom of the group's vertical space
  width: var(--chat-avatar-size);
  height: var(--chat-avatar-size);
  border-radius: 50%;
  background-color: var(--background-modifier-hover);
  color: var(--text-muted);
  font-size: calc(var(--chat-avatar-size) * 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
  box-shadow: 0 1px 2px rgba(0,0,0,0.1);
  z-index: 5; // Above potential background elements
  flex-shrink: 0;

  overflow: hidden; 
  
  img.ollama-avatar-image {
    display: block; // Прибирає можливий нижній відступ
    width: 100%;    // Заповнює всю ширину/висоту батьківського div
    height: 100%;
    object-fit: cover; // Масштабує зображення, зберігаючи пропорції і обрізаючи зайве
                       // Можна спробувати 'contain', якщо хочете бачити все зображення
    object-position: center; // Центрує зображення
  }

  .svg-icon { width: 60%; height: 60%; }

  .user-message-group & {
    background-color: var(--interactive-accent-translucent);
    color: var(--interactive-accent);
  }
}

// Message Bubble Styles
.message {
  // margin-bottom: calc(var(--chat-spacing-unit) * 1); // Use gap in wrapper instead
  padding: calc(var(--chat-spacing-unit) * 2) calc(var(--chat-spacing-unit) * 3);
  // position: relative; // No longer needed for buttons
  // padding-bottom: calc(var(--chat-spacing-unit) * 5); // No longer needed
  border-radius: 18px;
  width: fit-content; // Bubble width based on content
  max-width: 100%; // Max width is constrained by message-wrapper
  word-wrap: break-word;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.08);
  font-size: var(--font-ui-small);
  line-height: 1.5;
  transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;

  &.message-arriving { animation: message-appear 0.3s ease-out forwards; }
}

// Corner Radius logic for consecutive messages within the same wrapper
// Applied to the .message elements
.user-message-group .message-wrapper {
  .message:not(:last-child) { border-bottom-right-radius: 5px; }
  .message:last-child { border-bottom-right-radius: 18px; }
  .message:not(:first-child) { border-top-right-radius: 5px; }
  .message:first-child { border-top-right-radius: 18px; }
   .message { border-top-left-radius: 18px; border-bottom-left-radius: 18px; }
}
.ollama-message-group .message-wrapper {
  .message:not(:last-child) { border-bottom-left-radius: 5px; }
  .message:last-child { border-bottom-left-radius: 18px; }
  .message:not(:first-child) { border-top-left-radius: 5px; }
  .message:first-child { border-top-left-radius: 18px; }
   .message { border-top-right-radius: 18px; border-bottom-right-radius: 18px; }
}


// Role-specific message bubble styles
.user-message {
  background-color: var(--interactive-accent);
  // background-image: linear-gradient(135deg, var(--interactive-accent) 0%, var(--interactive-accent-hover) 100%);
  color: var(--text-on-accent);
  box-shadow: 0 1px 4px rgba(var(--interactive-accent-rgb), 0.2);
  &:hover { box-shadow: 0 3px 7px rgba(var(--interactive-accent-rgb), 0.3); transform: translateY(-1px); }
  .message-timestamp { color: var(--text-on-accent); opacity: 0.75; }
}
.ollama-message {
  background-color: var(--background-primary-alt);
  color: var(--text-normal);
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.06);
  &:hover { box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1); transform: translateY(-1px); }
   pre { background-color: var(--background-secondary) !important; }
}

// --- Action Buttons Styling & Positioning ---
.message-actions-wrapper {
  // Removed absolute positioning
  display: flex;
  gap: calc(var(--chat-spacing-unit) * 1.5); // Space between buttons
  width: fit-content; // Only as wide as needed
  // align-self will be controlled by parent .message-wrapper's align-items

  // Desktop hover visibility (default hidden)
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s ease-in-out, visibility 0s linear 0.2s;
  z-index: 6; // Ensure clickable
  margin-left: 10px;

  // Base button style inside actions
  button {
    background: transparent !important; // Force transparent background
    border: none; // Remove border
    box-shadow: none; // Remove shadow
    backdrop-filter: none; // Remove blur
    padding: 1px; // Minimal padding around icon
    color: var(--text-muted); // Icon color

    // background: rgba(var(--background-secondary-rgb), 0.7);
    // backdrop-filter: blur(3px);
    // border: 1px solid rgba(var(--background-modifier-border-rgb), 0.5);
    border-radius: var(--radius-s);
    // padding: 2px;
    // color: var(--text-muted);
    cursor: pointer;
    display: flex; align-items: center; justify-content: center;
    transition: all 0.15s ease;
    // box-shadow: 0 1px 2px rgba(0,0,0,0.1);

    .svg-icon { width: 14px; height: 14px; }

    &:hover {
        background: transparent !important; // Still transparent on hover
        color: var(--text-normal); // Change only icon color on hover
        transform: scale(1.05); // Keep scale effect if desired
    }
}

.delete-message-button {
  // Можна успадкувати базові стилі кнопки

  &.danger-option { // Використовуємо клас небезпеки
       color: var(--text-error); // Червонуватий колір іконки

       &:hover {
           color: var(--text-on-accent); // Білий або інший контрастний при наведенні
           background-color: var(--background-modifier-error-hover); // Червонуватий фон при наведенні
           border-color: transparent; // Можна прибрати рамку при наведенні
       }
  }
}

// --- Специфічні стилі для кнопки видалення НА ПОВІДОМЛЕННЯХ КОРИСТУВАЧА ---
// (щоб краще виглядало на синьому фоні)
.user-message .delete-message-button {
  &.danger-option {
      color: rgba(255, 150, 150, 0.8); // Світло-червоний для кращої видимості

      &:hover {
          background-color: rgba(200, 50, 50, 0.5); // Темніший червоний фон при наведенні
          color: white;
      }
  }
}

&.user-message-group & button { // Or .user-message + & button
  color: rgba(255, 255, 255, 0.8); // Lighter icon color for user messages
  background: transparent !important;
  border: none;
  box-shadow: none;
   &:hover {
      background: transparent !important;
      color: white;
   }
}
  }
  // Style for Regenerate button (optional)
  .regenerate-button {
     // color: var(--text-warning); // Example accent
  }
  button.summarize-button {
    // Можна додати специфічний колір або інші налаштування
    // Наприклад:
    // color: var(--text-accent);
    // &:hover {
    //   color: var(--text-accent-hover);
    // }
  }


// Стилі для модального вікна сумаризації (якщо потрібно)
.summary-modal-content {
  // Стилі для контейнера з текстом сумаризації
}


// Show buttons on hover of the MESSAGE BUBBLE (as buttons are now siblings)
// Or hover of the wrapper containing both? Let's try wrapper for larger target.
.message-wrapper:hover .message-actions-wrapper {
  opacity: 1;
  visibility: visible;
  transition-delay: 0s;
}

.user-message-group .message-actions-wrapper {
  // --- ДОДАНО ЦЕ ПРАВИЛО ---
  align-self: flex-start; // Перевизначає align-items: flex-end батьківського .message-wrapper,
                          // змушуючи САМЕ ЦЕЙ БЛОК КНОПОК вирівнятись по лівому краю.
  // --------------------------

  // Стилі самих кнопок (залишаються ті ж)
  button {
     background: rgba(255, 255, 255, 0.1);
     border-color: rgba(255, 255, 255, 0.2);
     color: rgba(255, 255, 255, 0.8);
     &:hover {
        background-color: rgba(255, 255, 255, 0.25);
        color: white;
     }
  }
}


// Specific button styles for user messages (actions appear below user bubble)
.user-message-group .message-actions-wrapper button {
   background: rgba(255, 255, 255, 0.1);
   border-color: rgba(255, 255, 255, 0.2);
   color: rgba(255, 255, 255, 0.8);
   &:hover {
      background-color: rgba(255, 255, 255, 0.25);
      color: white;
   }
}
// --- End Action Buttons Styling ---

// Message Content & Meta Containers
.message-content-container { /* Probably no longer needed if actions are outside */ }
.message-content {
  padding-bottom: calc(var(--chat-spacing-unit) * 1); // Smaller padding is okay now
  box-sizing: border-box;
  width: 100%;
  p { margin-bottom: calc(var(--p-spacing) / 2); }
  p:last-child { margin-bottom: 0; }
}

// Timestamp - should be inside .message, maybe after content? Let's keep it simple for now.
.message-timestamp {
  font-size: 0.75em;
  color: var(--text-faint);
  margin-top: var(--chat-spacing-unit); // Add space above timestamp if needed
  text-align: right;
  display: block;
  width: 100%;
  opacity: 0.9;
}


// --- Message Collapsing Styles ---
.message-content-collapsible {
  overflow: hidden;
  transition: max-height 0.3s ease-out;
}

.message-content-collapsed {
  mask-image: linear-gradient(to bottom, black 85%, transparent 100%);
  -webkit-mask-image: linear-gradient(to bottom, black 85%, transparent 100%);
  // position: relative; // No longer needed for ::after
  // Remove ::after styles entirely
}
// Remove .user-message .message-content-collapsed::after styles

// Show more button (consolidated styles)
.show-more-button {
  display: block;
  margin: calc(var(--chat-spacing-unit) * 0.5) auto 0 auto; // Small top margin, centered below collapsed content
  padding: 2px 10px;
  font-size: 0.8em;
  color: var(--text-muted);
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.2s ease;
  text-align: center;
  width: fit-content;
  z-index: 2; // Above masked content

  &:hover {
      background-color: var(--background-modifier-hover);
      color: var(--text-accent-hover);
      border-color: var(--background-modifier-border-hover);
  }
}
.user-message .show-more-button { // Style button when inside user message
    background-color: transparent;
    border-color: transparent;
    color: rgba(255, 255, 255, 0.7);
    &:hover {
        background-color: rgba(255, 255, 255, 0.2);
        color: white;
    }
}
// --- End Message Collapsing Styles ---

// --- Animation for arriving messages ---
@keyframes message-appear {
  from { opacity: 0; transform: translateY(8px); }
  to { opacity: 1; transform: translateY(0); }
}

// --- Media Query for Large Screens ---
@media screen and (min-width: 1600px) { // Порог ширини екрану (можна змінити: 1400px, 1800px, тощо)

  .ollama-chat-container {
    // Збільшуємо бокові відступи (padding) всередині контейнера чату
    // Це змусить контент бути вужчим і ближчим до центру
    // Експериментуйте зі значеннями (%, rem, px)
    padding-left: 15%;   // Наприклад, 15% від ширини контейнера зліва
    padding-right: 15%;  // Наприклад, 15% від ширини контейнера справа

    // Опціонально: Можна також трохи збільшити максимальну ширину самої колонки чату,
    // якщо вона здається занадто вузькою на великому екрані після додавання паддінгів.
    max-width: 3000px; // Наприклад
  }

  // Зазвичай, змінювати margin-left/right: auto для .message-wrapper не потрібно,
  // бо збільшення паддінгу батьківського контейнера вже звузить доступний простір.
  // Але якщо повідомлення все ще "липнуть" до країв після додавання паддінгу,
  // можна спробувати додати це (розкоментувати):
  /*
  .user-message-group .message-wrapper {
     margin-left: 0; // Прибираємо автоматичний відступ, що штовхав праворуч
  }
  .ollama-message-group .message-wrapper {
     margin-right: 0; // Прибираємо автоматичний відступ, що штовхав ліворуч
  }
  */

} // --- Кінець медіа-запиту ---

.scroll-to-bottom-button {
  position: absolute; // Позиціонування відносно батьківського .ollama-chat-area-content
  bottom: 15px; // Відступ від нижнього краю
  right: 20px; // Відступ від правого краю
  z-index: 50; // Має бути над повідомленнями

  width: 36px; // Розмір кнопки
  height: 36px;
  border-radius: 50%; // Кругла
  background-color: var(--background-secondary); // Фон, схожий на фон повідомлень ШІ або інший
  color: var(--text-muted); // Колір іконки
  border: 1px solid var(--background-modifier-border);
  box-shadow: var(--shadow-s); // Тінь для виділення
  cursor: pointer;

  display: flex; // Для центрування іконки
  align-items: center;
  justify-content: center;
  padding: 0;

  opacity: 0; // Прихована за замовчуванням
  visibility: hidden;
  transform: translateY(10px); // Початкова позиція для анімації появи
  transition: opacity 0.2s ease-out, visibility 0s linear 0.2s, transform 0.2s ease-out, background-color 0.15s ease;

  .svg-icon {
    width: 20px; // Розмір іконки
    height: 20px;
  }

  &:hover {
    background-color: var(--background-modifier-hover);
    color: var(--text-normal);
    transform: translateY(8px) scale(1.05); // Невеликий підйом при наведенні
  }

   &:active {
      transform: translateY(9px) scale(1); // Невелике "натискання"
   }

  // Клас для видимої кнопки
  &.visible {
    opacity: 0.85; // Не повністю непрозора, щоб не заважати
    visibility: visible;
    transform: translateY(0);
    transition: opacity 0.2s ease-out, visibility 0s linear 0s, transform 0.2s ease-out, background-color 0.15s ease;

     &:hover {
          opacity: 1; // Повна непрозорість при наведенні
     }
  }
}

// Опціонально: Можна додати анімацію появи лічильника на індикаторі нових повідомлень,
// коли з'являється і кнопка прокрутки вниз, якщо ви додаєте лічильник.
.new-message-indicator.visible {
   // Стилі для видимого індикатора
}

.summary-modal-content {
  // Стилі для контейнера з текстом сумаризації
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// Універсальний клас для анімації завантаження іконки в кнопці
.button-loading {
  // Можна додати стилі для самої кнопки в стані завантаження, якщо потрібно
  // Наприклад:
  // cursor: default; // Змінити курсор

  // Головне - анімація для іконки всередині
  .svg-icon {
    animation: spin 1s linear infinite;
  }

  
}

// styles.scss (або _messages.scss / _chat.scss)

// --- Стилі для роздільника дати в чаті ---
.chat-date-separator {
  width: fit-content;                 // Ширина за вмістом
  max-width: 80%;                     // Максимальна ширина, щоб не розтягуватись надто сильно
  margin-left: auto;                  // Горизонтальне центрування блоку
  margin-right: auto;
  margin-top: calc(var(--chat-spacing-unit) * 6);    // Відступ зверху (більший)
  margin-bottom: calc(var(--chat-spacing-unit) * 4); // Відступ знизу (стандартний)
  padding: calc(var(--chat-spacing-unit) * 0.75) calc(var(--chat-spacing-unit) * 2.5); // Внутрішні відступи
  font-size: var(--font-ui-smaller);  // Розмір шрифту - маленький
  color: var(--text-muted);           // Колір тексту - приглушений
  background-color: var(--background-secondary); // Фон, як у другорядних елементів UI
  border-radius: var(--radius-l);     // Закруглені кути
  text-align: center;                 // Центрування тексту всередині
  user-select: none;                  // Заборонити виділення тексту
  font-weight: 500;                   // Трохи жирніший шрифт (опціонально)

  // Опціонально: Додаємо ледь помітну рамку
  // border: 1px solid var(--background-modifier-border-hover);
}


// styles.scss або main.scss

// --- Стилі для Аватарок ---
$avatar-size: 28px; // Бажаний розмір аватара (наприклад, 28px, 30px, 32px)
$avatar-font-size: calc($avatar-size * 0.5); // Розмір шрифту для ініціалів
$avatar-icon-size: calc($avatar-size * 0.65); // Розмір іконки всередині аватара

// Головний контейнер аватара
.avatar-container { // Або CSS_CLASSES.AVATAR_CONTAINER, якщо ви так генеруєте класи
  width: $avatar-size;
  height: $avatar-size;
  min-width: $avatar-size; // Важливо для flex-контейнерів
  min-height: $avatar-size;
  border-radius: 50%; // Робимо його круглим
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden; // Обрізаємо все, що виходить за межі
  background-color: var(--background-modifier-hover); // Фоновий колір для ініціалів/іконок
  margin-right: 8px; // Відступ від повідомлення (якщо аватар зліва)
  // Якщо аватар користувача має бути справа, додайте відповідні стилі
  // наприклад, через .message-group.user-message .avatar-container { margin-left: 8px; margin-right: 0; }

  // Аватар-зображення
  &.avatar-image, // Якщо цей клас додається до самого контейнера
  img.avatar-image { // Або якщо це клас для <img> всередині
    width: 100%;
    height: 100%;
    object-fit: cover; // Зберігає пропорції зображення, заповнюючи контейнер
    border-radius: 50%; // Забезпечуємо круглість, навіть якщо саме зображення квадратне
  }

  // Аватар-іконка
  &.avatar-icon, // Якщо цей клас додається до самого контейнера
  .avatar-icon {  // Або якщо це клас для <span> всередині
    svg { // Стилізуємо SVG всередині (Obsidian setIcon використовує SVG)
      width: $avatar-icon-size;
      height: $avatar-icon-size;
      display: block; // Прибирає зайві відступи
    }
  }

  // Аватар-ініціали
  &.avatar-initials, // Якщо цей клас додається до самого контейнера
  div.avatar-initials { // Або якщо це клас для <div> всередині
    font-size: $avatar-font-size;
    font-weight: 600;
    color: var(--text-muted); // Колір ініціалів
    line-height: $avatar-size; // Центруємо вертикально (якщо одна літера)
    text-align: center;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

// Специфічні стилі, якщо ви розрізняєте user/ai аватари за класами на контейнері
.user-avatar { // Або CSS_CLASSES.AVATAR_USER_SPECIFIC
  // Можна додати, наприклад, інший фоновий колір
  // background-color: var(--interactive-accent);
  // color: var(--text-on-accent); // для ініціалів
}

.ai-avatar { // Або CSS_CLASSES.AVATAR_AI_SPECIFIC
  // background-color: var(--background-modifier-success); // Приклад
}

// Розміщення аватара відносно групи повідомлень
// Це приклад, якщо ваш .message-group є flex-контейнером
.message-group {
  display: flex;
  align-items: flex-start; // Або flex-end, якщо аватар має бути внизу довгого повідомлення
  margin-bottom: var(--size-2-2); // Приклад відступу між повідомленнями

  // Якщо повідомлення користувача, і аватар справа
  &.user-message { // Припускаючи, що ви додаєте клас user-message до message-group
    flex-direction: row-reverse;
    .avatar-container { // Або ваш клас для аватара
      margin-right: 0;
      margin-left: 8px;
    }
    .message-wrapper { // Припускаючи, що це обгортка для бульбашки
        align-self: flex-end; // Вирівнюємо саму бульбашку по правому краю
    }
  }
}

.assistant-tool-usage-indicator {
  font-style: italic;
  color: var(--text-faint); // Блідий колір тексту
  font-size: var(--font-ui-smaller); // Трохи менший шрифт
  // display: block; // Якщо хочете, щоб він був на окремому рядку
  // margin-bottom: var(--size-4-1); // Невеликий відступ знизу, якщо display: block
}

// Якщо ви хочете, щоб іконка "→" мала інший стиль
.assistant-tool-usage-indicator::before {
  // Якщо ви використовуєте "→" як текстовий префікс в prepareDisplayContent
  // content: "→ "; // Можна задати тут, а не в JS, але тоді префікс прибрати з JS
  // margin-right: 4px;
  // font-weight: bold; // Наприклад
}

// Альтернатива, якщо ви хочете стилізувати весь блок повідомлення асистента,
// коли він містить ТІЛЬКИ індикатор використання інструменту.
// Це складніше визначити без додаткової логіки в рендерері.
// .ollama-message.is-tool-indicator-only .message-content { // Потрібно додавати клас is-tool-indicator-only
//   font-style: italic;
//   color: var(--text-faint);
//   font-size: var(--font-ui-smaller);
// }