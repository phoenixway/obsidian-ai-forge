// src/styles/_messages.scss

// --- Глобальні змінні (якщо вони тут визначаються або імпортуються) ---
// Припускаємо, що :root змінні вже визначені в іншому місці.

// --- Змінні SASS для зручності ---
$chat-spacing-unit: var(--chat-spacing-unit, 5px); // Fallback, якщо CSS змінна не визначена
$chat-avatar-size: var(--chat-avatar-size, 32px); // Fallback
$chat-message-max-width: var(--chat-message-max-width, 700px); // Fallback
$chat-column-max-width: var(--chat-column-max-width, 1000px); // Fallback

// Аватар
$avatar-scale-factor: 1.2; // Збільшення розміру аватара
$avatar-final-size: calc(#{$chat-avatar-size} * #{$avatar-scale-factor});
$avatar-font-size-factor: 0.5;
$avatar-icon-size-factor: 0.65;

// --- Загальні контейнери ---
.ollama-chat-container {
  max-width: $chat-column-max-width;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  box-sizing: border-box; // Добре мати це за замовчуванням
  // padding: calc(#{$chat-spacing-unit} * 4); // Якщо потрібен загальний паддінг
}

.message-group {
  display: flex;
  width: 100%;
  position: relative;
  box-sizing: border-box;
  align-items: flex-start; // Зазвичай краще для вертикального вирівнювання з різною висотою аватара/повідомлень
  gap: calc(#{$chat-spacing-unit} * 2); // Додамо gap для відстані між аватаром та повідомленнями
                                        // Це замінить деякі margin-* на avatar-container
  margin-bottom: calc(#{$chat-spacing-unit} * 1); // Замість закоментованого !important

  // Вирівнювання аватара по вертикалі
  // Якщо потрібно, щоб аватар завжди був внизу, незважаючи на кількість повідомлень:
  // .avatar-container { align-self: flex-end; }
  // Якщо він має бути вгорі (як зараз з flex-start для message-group), то нічого не потрібно.
}

// --- Стилі для Аватарів ---
.avatar-container {
  width: $avatar-final-size;
  height: $avatar-final-size;
  min-width: $avatar-final-size;
  min-height: $avatar-final-size;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  background-color: var(--background-modifier-hover); // Загальний фон
  color: var(--text-muted); // Загальний колір для тексту/іконок
  // margin-bottom: 5px; // Можна прибрати, якщо gap в .message-group достатній
  flex-shrink: 0; // Важливо, щоб аватар не стискався

  // Зображення всередині
  img.avatar-image { // Більш специфічний селектор, якщо клас .avatar-image на img
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 50%; // Для img, якщо він не успадковує від батька з overflow: hidden
  }

  // Іконка всередині (якщо .avatar-icon - це клас на дочірньому елементі)
  .avatar-icon svg {
    width: calc(#{$avatar-final-size} * #{$avatar-icon-size-factor});
    height: calc(#{$avatar-final-size} * #{$avatar-icon-size-factor});
    display: block; // Забирає зайвий простір під svg
  }

  // Ініціали всередині (якщо .avatar-initials - це клас на дочірньому div)
  .avatar-initials {
    font-size: calc(#{$avatar-final-size} * #{$avatar-font-size-factor});
    font-weight: 600;
    line-height: 1; // Для кращого контролю, flex вирівнює
    text-align: center;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

// --- Групи повідомлень: User ---
.user-message-group {
  justify-content: flex-end;

  .avatar-container {
    order: 2;
    // margin-left: calc(#{$chat-spacing-unit} * 2); // Замінено на gap в .message-group
    // Специфічний колір для аватара користувача, якщо потрібно
    background-color: var(--interactive-accent-translucent); // Приклад
    color: var(--interactive-accent); // Приклад
  }
  .message-wrapper {
    order: 1;
    align-items: flex-end; // Вирівнюємо бульбашки праворуч
  }
}

// --- Групи повідомлень: Ollama (AI) ---
.ollama-message-group {
  justify-content: flex-start;

  .avatar-container {
    order: 1;
    // margin-right: calc(#{$chat-spacing-unit} * 2); // Замінено на gap в .message-group
    // margin-top: 45px; // Цей великий відступ виглядає дивно.
                       // Якщо це для вирівнювання з багаторядковим першим повідомленням,
                       // можливо, краще вирішувати через align-items на .message-group
                       // або через padding/margin на першому повідомленні.
                       // Поки що закоментую.
  }
  .message-wrapper {
    order: 2;
    align-items: flex-start; // Вирівнюємо бульбашки ліворуч
    // margin-left: 0 !important; // Ймовірно, не потрібно, якщо gap працює
  }
}

// --- Обгортка для повідомлень (спільна) ---
.message-wrapper {
  display: flex;
  flex-direction: column;
  // Тут можна задати максимальну ширину для самих повідомлень,
  // якщо вона відрізняється від --chat-message-max-width (наприклад, для групи повідомлень)
  // max-width: calc(#{$chat-message-max-width} * 0.9); // Приклад
}

// --- Стилі для бульбашок повідомлень (Message Bubble) ---
.message {
  padding: calc(#{$chat-spacing-unit} * 2) calc(#{$chat-spacing-unit} * 3);
  border-radius: 18px; // Загальний радіус, буде перевизначено для кутів
  width: fit-content;
  max-width: $chat-message-max-width; // Використовуємо змінну
  // min-width: 50px; // Можливо, додати мінімальну ширину для дуже коротких повідомлень
  white-space: normal; // Дозволяє переносити текст
  overflow-wrap: break-word;
  word-break: break-word; // Для довгих слів без пробілів
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.08);
  font-size: var(--font-ui-small); // Використовуємо CSS змінну для розміру шрифту
  line-height: 1.5;
  transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;
  margin-bottom: calc(#{$chat-spacing-unit} * 0.5); // Невеликий відступ між повідомленнями в групі

  &:last-child {
    margin-bottom: 0; // Забираємо відступ у останнього повідомлення в групі
  }

  &.message-arriving {
    animation: message-appear 0.3s ease-out forwards;
  }
}

// --- Логіка заокруглення кутів для послідовних повідомлень ---
// User messages
.user-message-group .message-wrapper {
  .message {
    border-top-left-radius: 18px;
    border-bottom-left-radius: 18px;

    &:first-child {
      border-top-right-radius: 18px;
    }
    &:not(:first-child) {
      border-top-right-radius: 5px; // Гостріший кут зверху для наступних
    }
    &:last-child {
      border-bottom-right-radius: 18px;
    }
    &:not(:last-child) {
      border-bottom-right-radius: 5px; // Гостріший кут знизу для попередніх
    }
    // Якщо в групі лише одне повідомлення, всі кути мають бути 18px (вже встановлено .message та :first-child/:last-child)
  }
}

// Ollama (AI) messages
.ollama-message-group .message-wrapper {
  .message {
    border-top-right-radius: 18px;
    border-bottom-right-radius: 18px;

    &:first-child {
      border-top-left-radius: 18px;
    }
    &:not(:first-child) {
      border-top-left-radius: 5px; // Гостріший кут зверху для наступних
    }
    &:last-child {
      border-bottom-left-radius: 18px;
    }
    &:not(:last-child) {
      border-bottom-left-radius: 5px; // Гостріший кут знизу для попередніх
    }
  }
}

// --- Стилі для конкретних ролей повідомлень ---
.user-message { // Цей клас застосовується до .message
  background-color: var(--interactive-accent);
  color: var(--text-on-accent);
  box-shadow: 0 1px 4px rgba(var(--interactive-accent-rgb), 0.2); // Використовуємо RGB для прозорості
  &:hover {
    box-shadow: 0 3px 7px rgba(var(--interactive-accent-rgb), 0.3);
    transform: translateY(-1px);
  }
  .message-timestamp { // Якщо timestamp всередині .user-message
    color: var(--text-on-accent);
    opacity: 0.75;
  }
}

.ollama-message { // Цей клас застосовується до .message
  background-color: var(--background-primary-alt);
  color: var(--text-normal);
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.06);
  &:hover {
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);
    transform: translateY(-1px);
  }
  pre { // Стилі для блоків коду всередині повідомлень AI
    background-color: var(--background-secondary) !important; // !important, якщо потрібно перебити інші стилі pre
    // Додаткові стилі для pre, якщо потрібно (padding, border-radius тощо)
    padding: calc(#{$chat-spacing-unit} * 2);
    border-radius: var(--radius-m);
    margin-top: calc(#{$chat-spacing-unit} * 1);
    margin-bottom: calc(#{$chat-spacing-unit} * 1);
    overflow-x: auto; // Горизонтальний скрол для довгих рядків коду
  }
}


// --- Контейнер контенту повідомлення та час ---
.message-content-container {
  // Цей контейнер може бути непотрібним, якщо .message-content напряму в .message
  // Якщо він використовується, переконайся, що він потрібен для структури.
}

.message-content {
  padding-bottom: calc(#{$chat-spacing-unit} * 1); // Відступ знизу перед timestamp/кнопками
  box-sizing: border-box; // Якщо ще не успадковано
  width: 100%; // Заповнює .message
  white-space: normal; // Успадковується, але для ясності
  p {
    margin-bottom: calc(var(--p-spacing) / 2); // Використовуємо CSS змінну --p-spacing
    &:last-child {
      margin-bottom: 0;
    }
  }
  // overflow-wrap та word-break вже є на .message
}

.message-timestamp {
  font-size: 0.75em; // Або var(--font-ui-smaller)
  color: var(--text-faint);
  margin-top: $chat-spacing-unit;
  text-align: right;
  display: block; // Щоб займав всю ширину і text-align спрацював
  width: 100%;
  opacity: 0.9;
}


// --- Кнопки дій (Message Actions) ---
.message-actions-wrapper {
  display: flex;
  gap: calc(#{$chat-spacing-unit} * 1.5);
  // width: fit-content; // Залишимо, якщо кнопки мають бути компактними
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s ease-in-out, visibility 0s linear 0.2s;
  z-index: 6; // Переконайся, що це вище за інші елементи
  
  // Розташування відносно .message або .message-wrapper
  // Приклад: позиціонування праворуч від повідомлення або під ним
  // margin-left: $chat-spacing-unit; // Якщо праворуч
  // margin-top: $chat-spacing-unit; // Якщо під повідомленням

  button.message-action-button { // Спільний клас для всіх кнопок дій
    background: transparent !important; // Якщо потрібно перебити стилі кнопок Obsidian
    border: none;
    box-shadow: none;
    // backdrop-filter: none; // Якщо використовувався
    padding: calc(#{$chat-spacing-unit} * 0.5); // Зробимо трохи більший padding
    color: var(--text-muted);
    border-radius: var(--radius-s);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.15s ease;

    .svg-icon {
      width: 14px; // Або var(--icon-s)
      height: 14px;
    }

    &:hover {
      background: var(--background-modifier-hover) !important; // Фон при наведенні
      color: var(--text-normal);
      transform: scale(1.05);
    }
  }

  // Специфічні стилі для кнопки видалення
  button.delete-message-button {
    &.danger-option { // Якщо цей клас додається динамічно
      color: var(--text-error);
      &:hover {
        color: var(--text-on-accent); // Або var(--text-error-hover)
        background-color: var(--background-modifier-error-hover) !important;
        // border-color: transparent; // Зазвичай не потрібен, якщо border: none
      }
    }
  }
}

// Поява кнопок дій при наведенні на обгортку повідомлення
// Переконайтеся, що .message-wrapper охоплює і повідомлення, і місце для кнопок
.message-wrapper:hover .message-actions-wrapper {
  opacity: 1;
  visibility: visible;
  transition-delay: 0s; // З'являються одразу при наведенні
}

// Стилі кнопок дій для повідомлень користувача (якщо вони відрізняються)
// Якщо background прозорий, то колір тексту має бути контрастним
.user-message-group .message-actions-wrapper button.message-action-button {
  color: rgba(255, 255, 255, 0.8); // Приклад для темного фону .user-message
  &:hover {
    background-color: rgba(255, 255, 255, 0.15) !important;
    color: white;
  }
  // Специфічна кнопка видалення для повідомлень користувача
  &.delete-message-button.danger-option {
    color: rgba(255, 150, 150, 0.8); // Світліший червоний для темного фону
    &:hover {
      background-color: rgba(200, 50, 50, 0.5) !important;
      color: white;
    }
  }
}

// Залишок твоїх стилів (regenerate, summarize, collapsible, show-more, animations, media queries, scroll-to-bottom, date-separator, tool-usage)
// Потрібно переглянути їх аналогічно, якщо там є що оптимізувати.
// Я залишу їх поки що без змін, щоб фокусуватися на основній структурі повідомлень.

// ... (Твої стилі для .regenerate-button, .summary-modal-content, .message-content-collapsible, etc.) ...

// --- Анімації ---
@keyframes message-appear {
  from {
    opacity: 0;
    transform: translateY(8px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// --- Кнопка завантаження ---
.button-loading { // Застосовується до кнопки
  .svg-icon { // Якщо іконка всередині кнопки
    animation: spin 1s linear infinite;
  }
}

// --- Розділювач дати ---
.chat-date-separator {
  width: fit-content;
  max-width: 80%; // Або фіксована ширина
  margin: calc(#{$chat-spacing-unit} * 6) auto calc(#{$chat-spacing-unit} * 4) auto;
  padding: calc(#{$chat-spacing-unit} * 0.75) calc(#{$chat-spacing-unit} * 2.5);
  font-size: var(--font-ui-smaller);
  color: var(--text-muted);
  background-color: var(--background-secondary);
  border-radius: var(--radius-l); // Використовуй CSS змінні для радіусів, якщо вони є
  text-align: center;
  user-select: none;
  font-weight: 500;
}

// --- Індикатор використання інструментів ---
.assistant-tool-usage-indicator {
  font-style: italic;
  color: var(--text-faint);
  font-size: var(--font-ui-smaller);
  margin-top: calc(#{$chat-spacing-unit} * 0.5);
  // &::before { content: "🛠️ "; } // Приклад з іконкою
}


// --- Медіа-запити та інше ---
// ... (Твої медіа-запити для .ollama-chat-container) ...
// ... (Твої стилі для .scroll-to-bottom-button) ...