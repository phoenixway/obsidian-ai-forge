/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var M=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var O=Object.prototype.hasOwnProperty;var C=(r,o)=>{for(var e in o)M(r,e,{get:o[e],enumerable:!0})},D=(r,o,e,t)=>{if(o&&typeof o=="object"||typeof o=="function")for(let a of L(o))!O.call(r,a)&&a!==e&&M(r,a,{get:()=>o[a],enumerable:!(t=E(o,a))||t.enumerable});return r};var x=r=>D(M({},"__esModule",{value:!0}),r);var P={};C(P,{default:()=>w});module.exports=x(P);var T=require("obsidian");var g=require("obsidian"),u="ollama-chat-view",y=class extends g.ItemView{constructor(e,t){super(e);this.messages=[];this.isProcessing=!1;this.historyLoaded=!1;this.scrollTimeout=null;this.plugin=t}getViewType(){return u}getDisplayText(){return"Ollama Chat"}async onOpen(){this.chatContainerEl=this.contentEl.createDiv({cls:"ollama-container"}),this.chatContainer=this.chatContainerEl.createDiv({cls:"ollama-chat-container"});let e=this.chatContainerEl.createDiv({cls:"chat-input-container"});this.inputEl=e.createEl("textarea",{attr:{placeholder:"\u041D\u0430\u043F\u0438\u0448\u0456\u0442\u044C \u043F\u043E\u0432\u0456\u0434\u043E\u043C\u043B\u0435\u043D\u043D\u044F..."}});let t=e.createEl("button",{cls:"send-button"});(0,g.setIcon)(t,"send");let a=e.createEl("button",{cls:"settings-button"});(0,g.setIcon)(a,"settings"),this.inputEl.addEventListener("keydown",s=>{s.key==="Enter"&&!s.shiftKey&&(s.preventDefault(),this.sendMessage())}),a.addEventListener("click",()=>{let s=this.app.setting;s.open(),s.openTabById("obsidian-ollama-duet")}),t.addEventListener("click",()=>{this.sendMessage()}),await this.loadMessageHistory()}async loadMessageHistory(){if(!this.historyLoaded)try{let e=await this.plugin.loadMessageHistory();if(Array.isArray(e)&&e.length>0){this.messages=[],this.chatContainer.empty();for(let t of e){let a={...t,timestamp:new Date(t.timestamp)};this.messages.push(a),this.renderMessage(a)}this.guaranteedScrollToBottom()}this.historyLoaded=!0}catch(e){console.error("Error loading message history:",e)}}async saveMessageHistory(){if(this.messages.length!==0)try{let e=this.messages.map(t=>({role:t.role,content:t.content,timestamp:t.timestamp.toISOString()}));await this.plugin.saveMessageHistory(JSON.stringify(e))}catch(e){console.error("Error saving message history:",e)}}guaranteedScrollToBottom(){this.scrollTimeout&&clearTimeout(this.scrollTimeout),requestAnimationFrame(()=>{this.chatContainer&&(console.log("Scroll Top:",this.chatContainer.scrollTop),console.log("Scroll Height:",this.chatContainer.scrollHeight),this.chatContainer.scrollTop=this.chatContainer.scrollHeight)})}async sendMessage(){if(this.isProcessing)return;let e=this.inputEl.value.trim();e&&(this.addMessage("user",e),this.inputEl.value="",await this.processWithOllama(e))}addMessage(e,t){let a={role:e,content:t,timestamp:new Date};this.messages.push(a),this.renderMessage(a),this.saveMessageHistory(),setTimeout(()=>{this.guaranteedScrollToBottom()},100)}renderMessage(e){let t=e.role==="user",a=this.isFirstMessageInGroup(e),s=this.isLastMessageInGroup(e),i,c=this.chatContainer.lastElementChild;a?i=this.chatContainer.createDiv({cls:`message-group ${t?"user-message-group":"ollama-message-group"}`}):i=c;let n=i.createDiv({cls:`message ${t?"user-message bubble user-bubble":"ollama-message bubble ollama-bubble"} ${s?t?"user-message-tail":"ollama-message-tail":""}`}),m=n.createDiv({cls:"message-content-container"}),p=m.createDiv({cls:"message-content"});e.role==="assistant"?g.MarkdownRenderer.renderMarkdown(e.content,p,"",this):e.content.split(`
`).forEach((S,d,b)=>{p.createSpan({text:S}),d<b.length-1&&p.createEl("br")});let h=m.createEl("button",{cls:"copy-button",attr:{title:"\u0421\u043A\u043E\u043F\u0456\u044E\u0432\u0430\u0442\u0438"}});(0,g.setIcon)(h,"copy"),h.addEventListener("click",()=>{navigator.clipboard.writeText(e.content),h.setText("\u0421\u043A\u043E\u043F\u0456\u0439\u043E\u0432\u0430\u043D\u043E!"),setTimeout(()=>{h.empty(),(0,g.setIcon)(h,"copy")},2e3)}),s&&n.createDiv({cls:"message-timestamp",text:this.formatTime(e.timestamp)})}isFirstMessageInGroup(e){let t=this.messages.indexOf(e);return t===0?!0:this.messages[t-1].role!==e.role}isLastMessageInGroup(e){let t=this.messages.indexOf(e);return t===this.messages.length-1?!0:this.messages[t+1].role!==e.role}formatTime(e){return e.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}async processWithOllama(e){this.isProcessing=!0;let t=this.addLoadingMessage();try{let a=this.plugin.getOllamaApiUrl(),s=await fetch(`${a}/api/generate`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({model:this.plugin.settings.modelName,prompt:e,stream:!1})});if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);let i=await s.json();t.parentNode&&t.parentNode.removeChild(t),this.addMessage("assistant",i.response)}catch(a){console.error("Error processing with Ollama:",a),t.parentNode&&t.parentNode.removeChild(t),this.addMessage("assistant","\u041F\u043E\u043C\u0438\u043B\u043A\u0430 \u0437'\u0454\u0434\u043D\u0430\u043D\u043D\u044F \u0437 Ollama. \u041F\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u043D\u0430\u043B\u0430\u0448\u0442\u0443\u0432\u0430\u043D\u043D\u044F \u0442\u0430 \u043F\u0435\u0440\u0435\u043A\u043E\u043D\u0430\u0439\u0442\u0435\u0441\u044F, \u0449\u043E \u0441\u0435\u0440\u0432\u0435\u0440 \u043F\u0440\u0430\u0446\u044E\u0454.")}finally{this.isProcessing=!1}}addLoadingMessage(){let e=this.chatContainer.createDiv({cls:"message-group ollama-message-group"}),a=e.createDiv({cls:"message ollama-message ollama-message-tail"}).createDiv({cls:"thinking-dots"});for(let s=0;s<3;s++)a.createDiv({cls:"thinking-dot"});return this.guaranteedScrollToBottom(),e}async clearChatMessages(){this.messages=[],this.chatContainer.empty(),this.historyLoaded=!1}};var l=require("obsidian"),f={modelName:"mistral",ollamaServerUrl:"http://localhost:11434",logFileSizeLimit:1024,saveMessageHistory:!0},v=class extends l.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}getDisplayText(){return"Ollama"}getId(){return"ollama-plugin"}async display(){let{containerEl:e}=this;e.empty(),new l.Setting(e).setName("Ollama Server URL").setDesc("IP address and port where Ollama is running (e.g. http://192.168.1.10:11434)").addText(s=>s.setPlaceholder("http://localhost:11434").setValue(this.plugin.settings.ollamaServerUrl).onChange(async i=>{this.plugin.settings.ollamaServerUrl=i,await this.plugin.saveSettings()}));let t=[];try{let s=await fetch(`${this.plugin.settings.ollamaServerUrl}/api/tags`,{method:"GET",headers:{"Content-Type":"application/json"}});if(s.ok){let i=await s.json();Array.isArray(i.models)&&(t=i.models.map(c=>typeof c=="object"?c.name:c))}else console.error("Failed to fetch available models")}catch(s){console.error("Error fetching available models:",s)}let a=t.includes(this.plugin.settings.modelName)?this.plugin.settings.modelName:t.length>0?t[0]:"";new l.Setting(e).setName("Model Name").setDesc("Select the language model to use").addDropdown(s=>{t.forEach(i=>{s.addOption(i,i)}),t.length===0&&s.addOption("","No models available"),s.setValue(a),s.onChange(async i=>{this.plugin.settings.modelName=i,await this.plugin.saveSettings()})}),new l.Setting(e).setName("Save Message History").setDesc("Save chat message history between sessions").addToggle(s=>s.setValue(this.plugin.settings.saveMessageHistory).onChange(async i=>{this.plugin.settings.saveMessageHistory=i,await this.plugin.saveSettings()})),new l.Setting(e).setName("Log File Size Limit").setDesc("Maximum size of message history log file in KB (1024 KB = 1 MB)").addSlider(s=>s.setLimits(256,10240,256).setValue(this.plugin.settings.logFileSizeLimit).setDynamicTooltip().onChange(async i=>{this.plugin.settings.logFileSizeLimit=i,await this.plugin.saveSettings()})).addExtraButton(s=>s.setIcon("reset").setTooltip("Reset to default (1024 KB)").onClick(async()=>{this.plugin.settings.logFileSizeLimit=f.logFileSizeLimit,await this.plugin.saveSettings(),this.display()})),new l.Setting(e).setName("\u041E\u0447\u0438\u0441\u0442\u0438\u0442\u0438 \u0456\u0441\u0442\u043E\u0440\u0456\u044E").setDesc("\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u0432\u0441\u044E \u0456\u0441\u0442\u043E\u0440\u0456\u044E \u0447\u0430\u0442\u0443").addButton(s=>s.setButtonText("\u041E\u0447\u0438\u0441\u0442\u0438\u0442\u0438").onClick(async()=>{await this.plugin.clearMessageHistory(),new l.Notice("\u0406\u0441\u0442\u043E\u0440\u0456\u044F \u0447\u0430\u0442\u0443 \u043E\u0447\u0438\u0449\u0435\u043D\u0430.")}))}};var w=class extends T.Plugin{constructor(){super(...arguments);this.view=null}async onload(){console.log("Ollama Plugin Loaded!"),await this.loadSettings(),this.registerView(u,e=>(this.view=new y(e,this),this.view)),this.addRibbonIcon("message-square","\u0412\u0456\u0434\u043A\u0440\u0438\u0442\u0438 Ollama",()=>{this.activateView()}),this.addCommand({id:"open-ollama-view",name:"\u0412\u0456\u0434\u043A\u0440\u0438\u0442\u0438 Ollama Chat",callback:()=>{this.activateView()}}),this.settingTab=new v(this.app,this),this.addSettingTab(this.settingTab),this.app.workspace.onLayoutReady(()=>{this.activateView()})}async activateView(){var a;let{workspace:e}=this.app,t=e.getLeavesOfType(u)[0];return t||(t=(a=e.getRightLeaf(!1))!=null?a:e.getLeaf(),await t.setViewState({type:u,active:!0})),e.revealLeaf(t),t}async loadSettings(){this.settings=Object.assign({},f,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}getOllamaApiUrl(){return this.settings.ollamaServerUrl||f.ollamaServerUrl}async saveMessageHistory(e){if(this.settings.saveMessageHistory)try{let a=this.app.vault.configDir+"/plugins/obsidian-ollama-duet"+"/chat_history.json",s=this.app.vault.adapter,i=await s.exists(a),c=0;if(i){let n=await s.stat(a);c=n!=null&&n.size?n.size/1024:0}if(c>this.settings.logFileSizeLimit){if(i){let n=a+".backup";await s.exists(n)&&await s.remove(n),await s.copy(a,n)}await s.write(a,e)}else if(!i)await s.write(a,e);else{let n=await s.read(a);try{let m=JSON.parse(n),p=JSON.parse(e),h=JSON.stringify([...m,...p]);if(h.length/1024>this.settings.logFileSizeLimit){let d=[...m,...p];for(;JSON.stringify(d).length/1024>this.settings.logFileSizeLimit;)d=d.slice(1);await s.write(a,JSON.stringify(d))}else await s.write(a,h)}catch(m){console.error("Error parsing message history:",m),await s.write(a,e)}}}catch(t){console.error("Failed to save message history:",t)}}async loadMessageHistory(){if(!this.settings.saveMessageHistory)return[];try{let e=this.app.vault.configDir+"/plugins/obsidian-ollama-duet/chat_history.json",t=this.app.vault.adapter;if(await t.exists(e)){let a=await t.read(e);return JSON.parse(a)}}catch(e){console.error("Failed to load message history:",e)}return[]}async clearMessageHistory(){try{let e=this.app.vault.configDir+"/plugins/obsidian-ollama-duet/chat_history.json",t=this.app.vault.adapter;await t.exists(e)&&(await t.remove(e),this.view&&this.view.clearChatMessages())}catch(e){console.error("Failed to clear message history:",e)}}};
